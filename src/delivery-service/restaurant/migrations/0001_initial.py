# Generated by Django 5.2.7 on 2025-10-13 13:32

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Назва категорії')),
                ('is_alcoholic', models.BooleanField(default=False, help_text='Відзначте, якщо категорія містить алкоголь (важливо для обмежень оплати - FR-020).', verbose_name='Алкогольна категорія')),
                ('slug', models.SlugField(help_text='URL-friendly назва категорії (автоматично генерується).', max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Категорія',
                'verbose_name_plural': 'Категорії',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Назва інгредієнта')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступний для використання')),
            ],
            options={
                'verbose_name': 'Інгредієнт',
                'verbose_name_plural': 'Інгредієнти',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Назва страви')),
                ('description', models.TextField(help_text='Короткий опис страви та її складу.', verbose_name='Опис')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Ціна')),
                ('photo', models.ImageField(blank=True, help_text="Обов'язкове поле для відображення в меню (FR-043).", null=True, upload_to='dishes_photos/', verbose_name='Фото страви')),
                ('is_available', models.BooleanField(default=True, help_text="Якщо вимкнено, страва позначається 'тимчасово недоступна' (UC-001).", verbose_name='Доступна для замовлення')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dishes', to='restaurant.category', verbose_name='Категорія')),
            ],
            options={
                'verbose_name': 'Страва',
                'verbose_name_plural': 'Меню страв',
                'ordering': ['-is_available', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DishIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_base_ingredient', models.BooleanField(default=True, help_text='Якщо це базовий інгредієнт, користувач може його прибрати (FR-015). Якщо ні, користувач може його додати.', verbose_name='Базовий інгредієнт')),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.dish', verbose_name='Страва')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.ingredient', verbose_name='Інгредієнт')),
            ],
            options={
                'verbose_name': 'Склад страви',
                'verbose_name_plural': 'Склад страв',
                'unique_together': {('dish', 'ingredient')},
            },
        ),
        migrations.AddField(
            model_name='dish',
            name='ingredients',
            field=models.ManyToManyField(related_name='dishes', through='restaurant.DishIngredient', to='restaurant.ingredient', verbose_name='Склад страви'),
        ),
    ]
